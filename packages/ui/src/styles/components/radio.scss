@use 'sass:map';

@include b(radio) {
  position: relative;
  display: inline-flex;
  gap: 0 8px;
  align-items: center;

  &:hover {
    @include e(input) {
      border-color: var(--#{$variable-prefix}color-primary-lighter);
    }
  }

  @include component-size;

  @include when(disabled) {
    color: var(--#{$variable-prefix}color-disabled);
    pointer-events: none;

    @include e(input-wrapper) {
      background-color: var(--#{$variable-prefix}background-color-disabled);

      &::after {
        background-color: var(--#{$variable-prefix}color-disabled);
      }
    }
  }

  @include when(checked) {
    &:not(.is-disabled) {
      @include e(input) {
        border-color: var(--#{$variable-prefix}color-primary);
      }

      @include e(input-wrapper) {
        &::before {
          animation: wave-spread 0.36s linear;
          animation-fill-mode: backwards;
        }
      }
    }

    @include e(input-wrapper) {
      &::after {
        opacity: 1;
        transform: scale(1);
      }
    }
  }

  @include m(button) {
    gap: 0;
    height: var(--#{$variable-prefix}size);
    white-space: nowrap;
    cursor: pointer;
    border: 1px solid var(--#{$variable-prefix}color-border);
    border-radius: var(--#{$variable-prefix}border-radius);
    transition: border-color var(--#{$variable-prefix}animation-duration-base) linear,
      background-color var(--#{$variable-prefix}animation-duration-base) linear;

    @include when(disabled) {
      background-color: var(--#{$variable-prefix}background-color-disabled);

      @include when(checked) {
        color: rgb(var(--#{$variable-prefix}color-primary-rgb) / 50%);
      }
    }

    @include when(focus-visible) {
      border-color: var(--#{$variable-prefix}color-primary-lighter);
      box-shadow: 0 0 0 3px rgb(var(--#{$variable-prefix}color-primary-rgb) / var(--#{$variable-prefix}shadow-normal));
    }

    @include e(input-wrapper) {
      width: 0;
      height: 0;
      overflow: hidden;
    }

    @include e(label) {
      display: inline-flex;
      align-items: center;
      height: 100%;
      padding: 0 calc(var(--#{$variable-prefix}padding-size) - 1px);
      transition: color var(--#{$variable-prefix}animation-duration-base) linear;
    }
  }

  @include m(button-outline) {
    &:hover {
      color: var(--#{$variable-prefix}color-primary-lighter);
      border-color: var(--#{$variable-prefix}color-primary-lighter);
    }

    @include when(checked) {
      color: var(--#{$variable-prefix}color-primary);
      border-color: var(--#{$variable-prefix}color-primary);
    }
  }

  @include m(button-fill) {
    &:hover {
      color: var(--#{$variable-prefix}color-primary-lighter);
      border-color: var(--#{$variable-prefix}color-primary-lighter);
    }

    @include when(checked) {
      color: map.get($colors, 'white');
      background-color: var(--#{$variable-prefix}color-primary);
      border-color: var(--#{$variable-prefix}color-primary);
    }
  }

  @include e(label) {
    white-space: nowrap;
  }

  @include e(input-wrapper) {
    position: relative;
    width: 16px;
    height: 16px;
    cursor: pointer;
    background-color: var(--#{$variable-prefix}background-color-input);
    border-radius: 50%;

    &::before {
      position: absolute;
      inset: 0;
      content: '';
      border: 1px solid var(--#{$variable-prefix}color-primary);
      border-radius: 50%;
      opacity: 0;
    }

    &::after {
      position: absolute;
      inset: 4px;
      content: '';
      background-color: var(--#{$variable-prefix}color-primary);
      border-radius: 50%;
      opacity: 0;
      transition: transform var(--#{$variable-prefix}animation-duration-fast) linear,
        opacity var(--#{$variable-prefix}animation-duration-fast) linear;
      transform: scale(0);
    }
  }

  @include e(input) {
    position: absolute;
    inset: 0;
    z-index: 1;
    margin: 0;
    cursor: inherit;
    border: 1px solid var(--#{$variable-prefix}color-border);
    border-radius: 50%;
    outline: none;
    transition: border-color var(--#{$variable-prefix}animation-duration-base) linear;
    appearance: none;

    &:focus {
      border-color: var(--#{$variable-prefix}color-primary-lighter);
      box-shadow: 0 0 0 3px rgb(var(--#{$variable-prefix}color-primary-rgb) / var(--#{$variable-prefix}shadow-normal));
    }
  }
}

@include b(radio-group) {
  @include when(change) {
    .#{$variable-prefix}radio,
    .#{$variable-prefix}radio__label {
      transition: none;
    }
  }

  @include m(default) {
    flex-wrap: wrap;
    gap: 8px 12px;
  }
}
