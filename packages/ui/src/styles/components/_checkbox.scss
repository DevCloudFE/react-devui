@keyframes checkbox-tick {
  0% {
    transform: scale(0.7);
  }

  90% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}

@include b(checkbox) {
  position: relative;

  display: inline-flex;
  gap: 0 8px;
  align-items: center;

  @include utils-disabled;

  &:not(.is-disabled) {
    &:hover {
      @include e(input) {
        border-color: var(--#{$variable-prefix}color-primary-lighter);
      }
    }

    @include when(checked) {
      @include e(state-container) {
        &::before {
          animation: wave-spread 0.36s ease-in-out;
          animation-fill-mode: backwards;
        }

        &::after {
          opacity: 1;
        }
      }

      @include e(input) {
        border-color: var(--#{$variable-prefix}color-primary);
      }

      @include e(tick) {
        animation: checkbox-tick 133ms ease-in-out;
        animation-fill-mode: backwards;
      }
    }

    @include when(indeterminate) {
      @include e(state-container) {
        &::before {
          animation: wave-spread 0.36s ease-in-out;
          animation-fill-mode: backwards;
        }

        &::after {
          opacity: 1;
        }
      }

      @include e(input) {
        border-color: var(--#{$variable-prefix}color-primary);
      }
    }

    @include e(input) {
      @include utils-outline;

      &:focus {
        border-color: var(--#{$variable-prefix}color-primary-lighter);

        box-shadow: 0 0 0 3px rgb(var(--#{$variable-prefix}color-primary-rgb) / var(--#{$variable-prefix}shadow-normal));
      }
    }
  }

  @include when(disabled) {
    @include e(state-container) {
      background-color: var(--#{$variable-prefix}background-color-disabled);
    }

    @include e(tick) {
      &::after {
        border-color: var(--#{$variable-prefix}color-disabled);
      }
    }

    @include e(indeterminate) {
      background-color: var(--#{$variable-prefix}color-disabled);
    }
  }

  @include e(state-container) {
    position: relative;

    width: 16px;
    height: 16px;
    border-radius: var(--#{$variable-prefix}border-radius);

    background-color: var(--#{$variable-prefix}background-color-input);
    cursor: pointer;

    &::before {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;

      border: 1px solid var(--#{$variable-prefix}color-primary);
      border-radius: var(--#{$variable-prefix}border-radius);

      opacity: 0;

      content: '';
    }

    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;

      border-radius: var(--#{$variable-prefix}border-radius);

      background-color: var(--#{$variable-prefix}color-primary);
      opacity: 0;

      transition: transform 133ms linear, opacity 133ms linear;

      content: '';
    }
  }

  @include e(tick) {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;

    border-radius: var(--#{$variable-prefix}border-radius);

    overflow: hidden;

    &::after {
      position: absolute;
      top: 3px;
      left: 3px;

      display: block;
      width: 10px;
      height: 6px;
      border-bottom: 2px solid #fff;
      border-left: 2px solid #fff;

      transform: rotate(-45deg);

      content: '';
    }
  }

  @include e(indeterminate) {
    position: absolute;
    top: 7px;
    left: 4px;
    z-index: 1;

    width: 8px;
    height: 2px;

    /* stylelint-disable-next-line declaration-property-value-allowed-list */
    background-color: #fff;
  }

  @include e(input) {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 5;

    width: 100%;
    height: 100%;
    margin: 0;
    border: 1px solid var(--#{$variable-prefix}color-border);
    border-radius: var(--#{$variable-prefix}border-radius);

    outline: none;

    cursor: inherit;

    transition: border-color 133ms linear, background-color 66ms linear, color 133ms linear;

    appearance: none;
  }
}

@include b(checkbox-group) {
  position: relative;

  display: flex;
  flex-wrap: wrap;
  gap: 8px 12px;
  align-items: center;

  @include m(vertical) {
    flex-direction: column;
    align-items: flex-start;
  }
}
