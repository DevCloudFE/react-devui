@use 'sass:map';
@import 'mixins/size';

@include b(button) {
  $selector: &;
  $disabled-selector: ':disabled:not(.is-loading)';

  @include utils-button;

  position: relative;
  min-width: var(--#{$d-prefix}size);
  height: var(--#{$d-prefix}size);
  margin: 0;
  border-radius: var(--#{$d-prefix}border-radius);
  transition: border-color var(--#{$d-prefix}animation-duration-base) linear, color var(--#{$d-prefix}animation-duration-base) linear,
    background-color var(--#{$d-prefix}animation-duration-base) linear;

  &:disabled {
    pointer-events: none;
  }

  @include when(loading) {
    pointer-events: none;
  }

  @include component-size;

  @each $theme, $rgb in $d-themes {
    @include theme(#{$theme}) {
      --#{$d-prefix}button-color: var(--#{$d-prefix}color-#{$theme});
      --#{$d-prefix}button-color-lighter: var(--#{$d-prefix}color-#{$theme}-lighter);
      --#{$d-prefix}button-color-darker: var(--#{$d-prefix}color-#{$theme}-darker);
      --#{$d-prefix}button-text-hover-background: var(--#{$d-prefix}background-color-#{$theme}-hover);
      --#{$d-prefix}button-text-active-background: var(--#{$d-prefix}background-color-#{$theme});
    }
  }

  @include m(primary) {
    padding: 0 calc(var(--#{$d-prefix}padding-size) - 1px);
    color: map.get($d-colors, 'white');
    background-color: var(--#{$d-prefix}button-color);
    border: 1px solid var(--#{$d-prefix}button-color);

    &:hover,
    &:focus,
    &.is-loading {
      background-color: var(--#{$d-prefix}button-color-lighter);
      border-color: var(--#{$d-prefix}button-color-lighter);
    }

    &:active {
      background-color: var(--#{$d-prefix}button-color-darker);
      border-color: var(--#{$d-prefix}button-color-darker);
    }

    &#{$disabled-selector} {
      filter: saturate(50%) grayscale(50%);
    }
  }

  @include m(secondary) {
    padding: 0 calc(var(--#{$d-prefix}padding-size) - 1px);
    color: var(--#{$d-prefix}text-color);
    background-color: transparent;
    border: 1px solid var(--#{$d-prefix}color-border);

    &:hover,
    &:focus,
    &.is-loading {
      color: var(--#{$d-prefix}button-color-lighter);
      border-color: var(--#{$d-prefix}button-color-lighter);
    }

    &:active {
      color: var(--#{$d-prefix}button-color-darker);
      border-color: var(--#{$d-prefix}button-color-darker);
    }

    &#{$disabled-selector} {
      color: var(--#{$d-prefix}color-disabled);
      pointer-events: none;
      background-color: var(--#{$d-prefix}background-color-disabled);
    }
  }

  @include m(outline) {
    padding: 0 calc(var(--#{$d-prefix}padding-size) - 1px);
    color: var(--#{$d-prefix}button-color);
    background-color: transparent;
    border: 1px solid var(--#{$d-prefix}button-color);

    &:hover,
    &:focus,
    &.is-loading {
      color: var(--#{$d-prefix}button-color-lighter);
      border-color: var(--#{$d-prefix}button-color-lighter);
    }

    &:active {
      color: var(--#{$d-prefix}button-color-darker);
      border-color: var(--#{$d-prefix}button-color-darker);
    }

    &#{$disabled-selector} {
      color: var(--#{$d-prefix}color-disabled);
      border-color: var(--#{$d-prefix}color-border);
    }
  }

  @include m(dashed) {
    padding: 0 calc(var(--#{$d-prefix}padding-size) - 1px);
    color: var(--#{$d-prefix}button-color);
    background-color: transparent;
    border: 1px dashed var(--#{$d-prefix}button-color);

    &:hover,
    &:focus,
    &.is-loading {
      color: var(--#{$d-prefix}button-color-lighter);
      border-color: var(--#{$d-prefix}button-color-lighter);
    }

    &:active {
      color: var(--#{$d-prefix}button-color-darker);
      border-color: var(--#{$d-prefix}button-color-darker);
    }

    &#{$disabled-selector} {
      color: var(--#{$d-prefix}color-disabled);
      border-color: var(--#{$d-prefix}color-border);
    }
  }

  @include m(text) {
    padding: 0 var(--#{$d-prefix}padding-size);
    color: var(--#{$d-prefix}text-color);
    background-color: transparent;
    border: none;

    &:hover,
    &:focus,
    &.is-loading {
      color: var(--#{$d-prefix}button-color-lighter);
      background-color: var(--#{$d-prefix}button-text-hover-background);
    }

    &:active {
      color: var(--#{$d-prefix}button-color-darker);
      background-color: var(--#{$d-prefix}button-text-active-background);
    }

    &#{$disabled-selector} {
      color: var(--#{$d-prefix}color-disabled);
      pointer-events: none;
      background-color: var(--#{$d-prefix}background-color-disabled);
    }
  }

  @include m(link) {
    height: auto;
    padding: 0;
    color: var(--#{$d-prefix}button-color);
    background-color: transparent;
    border: none;

    &:hover,
    &:focus,
    &.is-loading {
      color: var(--#{$d-prefix}button-color-lighter);
    }

    &:active {
      color: var(--#{$d-prefix}button-color-darker);
    }

    &#{$disabled-selector} {
      color: var(--#{$d-prefix}color-disabled);
    }
  }

  @include m(circle) {
    border-radius: 50%;
  }

  @include m(round) {
    border-radius: calc(var(--#{$d-prefix}size) / 2);
  }

  @include m(block) {
    width: 100%;
  }

  @include m(icon) {
    &:not(#{$selector}--round) {
      padding: 0;
    }

    @include e(icon) {
      width: auto;
      font-size: 1.2em;
    }
  }

  @include m(icon-right) {
    flex-direction: row-reverse;

    @include e(icon) {
      justify-content: flex-end;
    }
  }

  @include e(icon) {
    display: inline-flex;
    width: calc(1em + 8px);
  }
}
